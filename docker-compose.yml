version: '3.5'

services:
  app:
    container_name: app
    ports:
      - "8000:8000"
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/usr/src/app
    networks:
      - app_network
      - redis_network
    command: [ "/usr/src/docker/app.sh" ]
    restart: always

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network
    ports:
      - "27017:27017"
  redis:
    container_name: redis
    restart: always
    image: redis:7.0.8
    networks:
      - redis_network
  celery-worker:
    container_name: celery-worker
    build:
      context: .
      dockerfile: Dockerfile  # Use your existing Dockerfile-dev or create a new one
    volumes:
      - ./app:/usr/src/app
    env_file:
      - .env
    networks:
      - app_network
      - redis_network
    command: [ "/usr/src/docker/celery-worker.sh" ]  # Command to start Celery worker
    restart: always

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile-dev
    ports:
      - "8080:8080"  # Map container port 80 to host port 8080
    volumes:
      - ./frontend:/app
    networks:
      - app_network
    restart: always
  meilisearch:
    image: getmeili/meilisearch:v1.2
    env_file:
      - .env
    networks:
      - app_network
    ports:
      - "7700:7700"
    volumes:
      - ./meilisearch_data:/data.ms
    environment:
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
    restart: always


networks:
  app_network:
  redis_network:

volumes:
  mongodb_data:
  meilisearch_data:

